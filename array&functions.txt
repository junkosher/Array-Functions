Перепишите функцию, используя оператор '?' или '||'
Следующая функция возвращает true, если параметр age больше 18.

В ином случае она задаёт вопрос confirm и возвращает его результат.

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('Родители разрешили?');
  }
}
Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.

Сделайте два варианта функции checkAge:

Используя оператор ?
Используя оператор ||

------------------------------------------------------------------------------

Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

Пример вызовов:

min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1

--------------------------------------------------------

Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.

pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1
Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).

--------------------------------------------------------
Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. напишите функцию которая вернет массив состоящий из элементов этих двух массивов
---------------------------------------------------
Дан массив ['a', 'b', 'c']. напишите функцию которая добавит ему в конец элементы 1, 2, 3 и вернет их
----------------------------------------------------
Дан массив [1, 2, 3]. напишите функцию которая сделает из него массив [3, 2, 1].
-----------------------------------------------------------
Дан массив [1, 2, 3]. напишите функцию которая добавит ему в конец элементы 4, 5, 6 и вернет его
------------------------------------------------------
Дан массив [1, 2, 3]. напишите функцию которая добавит ему в начало элементы 4, 5, 6 и вернет его
---------------------------------------------------------
Дан массив ['js', 'css', 'jq']. напишите функцию которая вернет первый элемент.
----------------------------------------------------------
Дан массив ['js', 'css', 'jq']. напишите функцию которая вернет последний элемент.

создайте функции для следующих задачи 
--------------------------------------------------------------------------
Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].

Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].

 Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].

 Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].

 Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].

 Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].

Дан массив [3, 4, 1, 2, 7]. Отсортируйте его по убыванию, потом по возрастанию, потом чтобы в начале были четные а после нечетные элементы массива

-----------------------------------------------------------------------------
используется стрелочную функцию для примеров ниже:

 Сделайте функцию, которая возвращает квадрат числа. Число передается параметром.

 Сделайте функцию, которая возвращает сумму двух чисел.

 Сделайте функцию, которая отнимает от первого числа второе и делит на третье.
----------------------------------------------------------------------
 Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.

 Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.

 Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'.

Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.

 Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true, а если нет - false.

 Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. Если отрицательное - пусть функция вернет true, а если нет - false.
=======================
задача со звездочкой:
 С помощью двух вложенных циклов нарисуйте следующую пирамидку:

1
22
333
4444
55555
666666
7777777
88888888
999999999
========================================
 Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.

 Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее.

 Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями. Первым параметром функция принимает значение, которым заполнять массив, а вторым - сколько элементов должно быть в массиве. Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].

 Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти.

 Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.

Дан массив с числами. Создайте из него новый массив, где останутся лежать только положительные числа. Создайте для этого вспомогательную функцию isPositive(), которая параметром будет принимать число и возвращать true, если число положительное, и false - если отрицательное.

Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.

 Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи.

 Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.

 Найдите все года от 1 до 2021, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.

 Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.

 Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.

 Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число).

 Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке.